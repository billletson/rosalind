import problems
import filecmp

problems.prob_dna()
assert filecmp.cmp("answer.txt", "sample_answers/DNA.txt")
problems.prob_rna()
assert filecmp.cmp("answer.txt", "sample_answers/RNA.txt")
problems.prob_revc()
assert filecmp.cmp("answer.txt", "sample_answers/REVC.txt")
problems.prob_fib()
assert filecmp.cmp("answer.txt", "sample_answers/FIB.txt")
problems.prob_gc()
assert filecmp.cmp("answer.txt", "sample_answers/GC.txt")
problems.prob_hamm()
assert filecmp.cmp("answer.txt", "sample_answers/HAMM.txt")
problems.prob_iprb()
assert filecmp.cmp("answer.txt", "sample_answers/IPRB.txt")
problems.prob_prot()
assert filecmp.cmp("answer.txt", "sample_answers/PROT.txt")
problems.prob_subs()
assert filecmp.cmp("answer.txt", "sample_answers/SUBS.txt")
problems.prob_cons()
assert filecmp.cmp("answer.txt", "sample_answers/CONS.txt")
problems.prob_fibd()
assert filecmp.cmp("answer.txt", "sample_answers/FIBD.txt")
problems.prob_grph()
assert filecmp.cmp("answer.txt", "sample_answers/GRPH.txt")
problems.prob_iev()
assert filecmp.cmp("answer.txt", "sample_answers/IEV.txt")
problems.prob_lcsm()
assert filecmp.cmp("answer.txt", "sample_answers/LCSM.txt")
problems.prob_lia()
assert filecmp.cmp("answer.txt", "sample_answers/LIA.txt")
problems.prob_mprt()
assert filecmp.cmp("answer.txt", "sample_answers/MPRT.txt")
problems.prob_mrna()
assert filecmp.cmp("answer.txt", "sample_answers/MRNA.txt")
problems.prob_orf()
assert filecmp.cmp("answer.txt", "sample_answers/ORF.txt")
problems.prob_perm()
assert filecmp.cmp("answer.txt", "sample_answers/PERM.txt")
problems.prob_prtm()
assert filecmp.cmp("answer.txt", "sample_answers/PRTM.txt")
problems.prob_revp()
assert filecmp.cmp("answer.txt", "sample_answers/REVP.txt")
problems.prob_splc()
assert filecmp.cmp("answer.txt", "sample_answers/SPLC.txt")
problems.prob_lexf()
assert filecmp.cmp("answer.txt", "sample_answers/LEXF.txt")
problems.prob_lgis()
assert filecmp.cmp("answer.txt", "sample_answers/LGIS.txt")
problems.prob_long()
assert filecmp.cmp("answer.txt", "sample_answers/LONG.txt")
problems.prob_pmch()
assert filecmp.cmp("answer.txt", "sample_answers/PMCH.txt")
problems.prob_pper()
assert filecmp.cmp("answer.txt", "sample_answers/PPER.txt")
problems.prob_prob()
assert filecmp.cmp("answer.txt", "sample_answers/PROB.txt")
problems.prob_sign()
assert filecmp.cmp("answer.txt", "sample_answers/SIGN.txt")
problems.prob_sseq()
assert filecmp.cmp("answer.txt", "sample_answers/SSEQ.txt")
problems.prob_tran()
assert filecmp.cmp("answer.txt", "sample_answers/TRAN.txt")
problems.prob_tree()
assert filecmp.cmp("answer.txt", "sample_answers/TREE.txt")
problems.prob_inod()
assert filecmp.cmp("answer.txt", "sample_answers/INOD.txt")
problems.prob_mmch()
assert filecmp.cmp("answer.txt", "sample_answers/MMCH.txt")
problems.prob_sset()
assert filecmp.cmp("answer.txt", "sample_answers/SSET.txt")
problems.prob_cat()
assert filecmp.cmp("answer.txt", "sample_answers/CAT.txt")
problems.prob_kmp()
assert filecmp.cmp("answer.txt", "sample_answers/KMP.txt")
problems.prob_pdst()
assert filecmp.cmp("answer.txt", "sample_answers/PDST.txt")
problems.prob_rstr()
assert filecmp.cmp("answer.txt", "sample_answers/RSTR.txt")

print "tests pass"